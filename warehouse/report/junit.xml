<testsuites name="jest tests" tests="17" failures="0" time="3.761">
  <testsuite name="/service/customer/findByPkOrCreate" errors="0" failures="0" skipped="0" timestamp="2019-05-06T22:13:53" time="0.584" tests="3">
    <testcase classname="/service/customer/findByPkOrCreate should return EXIST customer" name="/service/customer/findByPkOrCreate should return EXIST customer" time="0.008">
    </testcase>
    <testcase classname="/service/customer/findByPkOrCreate should return NEW customer" name="/service/customer/findByPkOrCreate should return NEW customer" time="0.002">
    </testcase>
    <testcase classname="/service/customer/create should return NEW customer" name="/service/customer/create should return NEW customer" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="/service/inventoryAudit/logAdded" errors="0" failures="0" skipped="0" timestamp="2019-05-06T22:13:54" time="0.138" tests="2">
    <testcase classname="/service/inventoryAudit/logAdded should return insert audit log with action ADDED" name="/service/inventoryAudit/logAdded should return insert audit log with action ADDED" time="0.006">
    </testcase>
    <testcase classname="/service/inventoryAudit/logAdded should do nothing when there is no inventory data" name="/service/inventoryAudit/logAdded should do nothing when there is no inventory data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="/service/customerAudit/logAdded" errors="0" failures="0" skipped="0" timestamp="2019-05-06T22:13:53" time="0.774" tests="2">
    <testcase classname="/service/customerAudit/logAdded should return inserted data with currentInformation" name="/service/customerAudit/logAdded should return inserted data with currentInformation" time="0.019">
    </testcase>
    <testcase classname="/service/customerAudit/logAdded should throw error when there is no customer id" name="/service/customerAudit/logAdded should throw error when there is no customer id" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="/service/depositReceipt/generateDepositReceiptNumber" errors="0" failures="0" skipped="0" timestamp="2019-05-06T22:13:54" time="0.163" tests="4">
    <testcase classname="/service/depositReceipt/generateDepositReceiptNumber should return deposite receipt number 10 digits" name="/service/depositReceipt/generateDepositReceiptNumber should return deposite receipt number 10 digits" time="0.003">
    </testcase>
    <testcase classname="/service/depositReceipt/generateDepositReceiptNumber should return deposite receipt number contain only character and number" name="/service/depositReceipt/generateDepositReceiptNumber should return deposite receipt number contain only character and number" time="0">
    </testcase>
    <testcase classname="/service/depositReceipt/generateDepositReceiptNumber should return deposite receipt number NOT contain any special character" name="/service/depositReceipt/generateDepositReceiptNumber should return deposite receipt number NOT contain any special character" time="0">
    </testcase>
    <testcase classname="/service/depositReceipt/generateDepositReceiptNumber should return deposite receipt number NOT contain lower character" name="/service/depositReceipt/generateDepositReceiptNumber should return deposite receipt number NOT contain lower character" time="0">
    </testcase>
  </testsuite>
  <testsuite name="/service/inventory/deposit" errors="0" failures="0" skipped="0" timestamp="2019-05-06T22:13:54" time="0.159" tests="2">
    <testcase classname="/service/inventory/deposit should deposited inventory with EXIST customer correctly" name="/service/inventory/deposit should deposited inventory with EXIST customer correctly" time="0.006">
    </testcase>
    <testcase classname="/service/inventory/deposit should deposited inventory with NEW customer correctly" name="/service/inventory/deposit should deposited inventory with NEW customer correctly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="/service/pricing/calculateInventoryDeposited" errors="0" failures="0" skipped="0" timestamp="2019-05-06T22:13:53" time="1.443" tests="4">
    <testcase classname="/service/pricing/calculateInventoryDeposited should return Supplementary Food price for 5 days" name="/service/pricing/calculateInventoryDeposited should return Supplementary Food price for 5 days" time="0.019">
    </testcase>
    <testcase classname="/service/pricing/calculateInventoryDeposited should return Clothes by weight price for 4 days" name="/service/pricing/calculateInventoryDeposited should return Clothes by weight price for 4 days" time="0.002">
    </testcase>
    <testcase classname="/service/pricing/calculateInventoryDeposited should return Clothes by charter price for 3 days" name="/service/pricing/calculateInventoryDeposited should return Clothes by charter price for 3 days" time="0.006">
    </testcase>
    <testcase classname="/service/pricing/calculateInventoryDeposited should return Others type price for 6 days" name="/service/pricing/calculateInventoryDeposited should return Others type price for 6 days" time="0.002">
    </testcase>
  </testsuite>
</testsuites>